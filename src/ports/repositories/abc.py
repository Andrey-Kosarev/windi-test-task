from abc import ABC, abstractmethod
from typing import Optional


class IRepository(ABC):

    @abstractmethod
    def get(self, id_: int): ...

    @abstractmethod
    def list(self, limit: int, offset: int): ...

    @abstractmethod
    def create(self, **kwargs): ...

    @abstractmethod
    def update(self, id_: int, **kwargs): ...

    @abstractmethod
    def delete(self, id_: int): ...


class IChatRepository(IRepository, ABC): ...
class IUserRepository(IRepository, ABC): ...
class IMessageRepository(IRepository, ABC): ...
class IGroupRepository(IRepository, ABC): ...